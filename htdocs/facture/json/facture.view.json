{
   "_id": "_design/Facture",
   "language": "javascript",
   "views": {
       "list": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"Facture\")\n  emit(doc._id, doc);\n}"
       },
       "count": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"Facture\")\n  emit(doc.ref, 1);\n}",
           "reduce": "function(keys, values){\n\treturn sum(values);\n}"
       },
       "listByRef": {
           "map": "function(doc) {\nif (doc.class && doc.class == 'Facture')\n  emit(doc.ref, doc);\n}"
       },
       "lines": {
           "map": "function(doc) {\nif (doc.class && doc.class == 'FactureLigne')\n  emit(doc._id, doc);\n}"
       },
       "linesPerFacture": {
           "map": "function(doc) {\nif (doc.class && doc.class == 'FactureLigne')\n  emit(doc.fk_facture, doc);\n}"
       },
       "listUnpaid": {
           "map": "function(doc) {\nif (doc.class && doc.class==\"Facture\" && (!doc.paye || doc.paye != doc.total_ttc))\n  emit(doc.socid, doc);\n}"
       },
       "payments": {
           "map": "function(doc) {\nif (doc.class && doc.class==\"Paiement\")\n  emit(doc._id, doc);\n}"
       },
       "paymentsPerFacture": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"Paiement\") {\nfor (i in doc.amounts) {\n  emit(i, {id: doc._id, datepaye: doc.datepaye, amount: parseFloat(doc.amounts[i])});\n}\n}\n}"
       },
       "sumPaymentsPerFacture": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"Paiement\") {\nfor (i in doc.amounts) {\n  emit(i, parseFloat(doc.amounts[i]));\n}\n}\n}",
           "reduce": "function(keys, values){\nreturn sum(values);\n}"
       }
   }
}