<?php
/* Copyright (C) 2007-2011 Laurent Destailleur  <eldy@users.sourceforge.net>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * or see http://www.gnu.org/
 */

/**
 *		\file       htdocs/core/modules/security/generate/modules_genpassword.php
 *		\ingroup    core
 *		\brief      File with parent class for password generating classes
 */
require_once DOL_DOCUMENT_ROOT.'/core/lib/functions.lib.php';


/**
 *  \class      ModeleGenPassword
 *  \brief      Parent class for password rules/management modules
 */
abstract class ModeleGenPassword
{
    var $error='';

    /**
     * 		Return if a module can be used or not
     *
     *      @return		boolean     true if module can be used
     */
    function isEnabled()
    {
        return true;
    }

    /**
     *		Return description of module
     *
     *      @return     string      Description of text
     */
    function getDescription()
    {
        global $langs;
        return $langs->trans("NoDescription");
    }

    /**
     * 		Return an example of password generated by this module
     *
     *      @return     string      Example of password
     */
    function getExample()
    {
        global $langs;
        $langs->load("bills");
        return $langs->trans("NoExample");
    }

	/**
	 * 		Build new password
	 *
 	 *      @return     string      Return a new generated password
	 */
    function getNewGeneratedPassword()
    {
        global $langs;
        return $langs->trans("NotAvailable");
    }

	/**
	 * 		Validate a password
	 *
	 *		@param		string	$password	Password to check
 	 *      @return     int					0 if KO, >0 if OK
	 */
    function validatePassword($password)
    {
        return 1;
    }

}

?>
