{
   "_id": "_design/Commande",
   "language": "javascript",
   "views": {
       "list": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"Commande\")\n  emit(doc._id, doc);\n}"
       },
       "count": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"Commande\")\n  emit(doc.ref, 1);\n}",
           "reduce": "function(keys, values){\nreturn sum(values);\n}"
       },
       "lines": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"OrderLine\")\n  emit(doc._id, doc);\n}"
       },
       "linesPerCommande": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"OrderLine\")\n  emit(doc.fk_commande, doc);\n}"
       },
       "count_status": {
           "map": "function(doc) {\nif (doc.class && doc.class == \"Commande\")\n  emit(doc.Status, 1);\n}",
           "reduce": "function(keys, values){\nreturn sum(values);\n}"
       },
       "listLinkedObjects": {
           "map": "function(doc) {\nif (doc.class && (doc.class == \"Propal\" || doc.class == \"Commande\" || doc.class == \"Facture\")) {\nfor (i in doc.linked_objects)\nemit(doc.linked_objects[i].id, {id: doc._id,class:doc.class});\n}\n}"
       }
   },
   "updates": {
       "in-place": "function (doc, req) {\n var field = req.query.field;\n var value = req.query.value;\n doc[field] = value;\n  return [doc, value];\n }"
   }
}